{"version":3,"sources":["components/LinkButton/index.jsx","components/Sider/constants.js","components/Sider/index.jsx","HOC/AsyncComponent/index.jsx","routes/routesList.js","routes/MakeRoutes/index.jsx","routes/index.jsx","components/Footer/FooterColumn/index.jsx","components/Footer/index.jsx","wrappers/Layout/index.jsx","wrappers/Base/index.jsx","App.jsx","serviceWorker.js","index.jsx","routes/routesDict.js"],"names":["LinkButton","className","route","text","to","variant","defaultProps","undefined","menuItems","title","redirection","routesDictionary","home","key","work","bio","contact","withRouter","history","useState","open","setOpen","path","location","pathname","split","menu","map","item","Nav","Item","Container","fluid","Row","Col","xs","xl","src","alt","Button","onClick","icon","faBars","size","Collapse","in","asyncComponent","importComponent","props","state","component","default","this","setState","DownloadComponent","Component","AsyncHome","AsyncWorkList","AsyncBio","AsyncContact","AsyncWorkSimple","AsyncNotFound","routes","exact","workSimple","padding","notFound","routeTypes","public","renderProps","MakeRouteWithSubRoutes","type","render","propsComponent","document","Routes","FooterColumn","children","Footer","Layout","noGutters","baseStates","loading","Base","App","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4cbf641.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nconst LinkButton = ({ className, route, text }) => (\n  <Link className={className} to={route}>\n    <Button variant=\"link\">\n      { text }\n    </Button>\n  </Link>\n);\n\nLinkButton.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n};\n\nLinkButton.defaultProps = {\n  className: undefined,\n};\n\nexport default LinkButton;\n","import routesDictionary from '../../routes/routesDict';\n\nconst menuItems = [\n  {\n    title: 'Home',\n    redirection: routesDictionary.home,\n    key: '',\n  },\n  {\n    title: 'Work',\n    redirection: routesDictionary.work,\n    key: 'work',\n  },\n  {\n    title: 'Bio',\n    redirection: routesDictionary.bio,\n    key: 'bio',\n  },\n  {\n    title: 'Contact me',\n    redirection: routesDictionary.contact,\n    key: 'contact',\n  },\n];\n\nexport default menuItems;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Nav, Collapse, Button, Col, Row, Container } from 'react-bootstrap';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport menuItems from './constants';\n\nimport './styles.scss';\n\nconst Sider = ({ history }) => {\n  const [open, setOpen] = useState(false);\n  const { location } = history;\n  const { pathname } = location;\n  const path = pathname.split('/');\n  const menu = menuItems.map((item) => (\n    <Nav.Item\n      className={path[1] === item.key ? 'selected' : undefined}\n      key={item.key}\n    >\n      <Link to={item.redirection}>{item.title}</Link>\n    </Nav.Item>\n  ));\n\n  return (\n    <Nav className=\"flex-column sider\">\n      <Container fluid>\n        <Row>\n          <Col xs={6} xl={12} className=\"sider-icon\">\n            <img\n              src=\"https://themes.muffingroup.com/be/freelancer/wp-content/uploads/2016/03/retina-freelancer.png\"\n              alt=\"logo-test\"\n            />\n          </Col>\n          <Col xs={6} className=\"sider-collapse sider-menu\">\n            <Button\n              onClick={() => {\n                setOpen(!open);\n              }}\n            >\n              <FontAwesomeIcon icon={faBars} size=\"lg\" />\n            </Button>\n          </Col>\n        </Row>\n        <Collapse className=\"sider-collapse\" in={open}>\n          <div>\n            {menu}\n          </div>\n        </Collapse>\n        <div className=\"sider-normal\">\n          {menu}\n        </div>\n      </Container>\n    </Nav>\n  );\n};\n\nSider.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Sider);\n","import React, { Component } from 'react';\n\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null,\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component,\n      });\n    }\n\n    render() {\n      const { component: DownloadComponent } = this.state;\n\n      return DownloadComponent ? <DownloadComponent {...this.props} /> : null;\n    }\n  }\n\n  return AsyncComponent;\n}\n","import routesDictionary from './routesDict';\nimport asyncComponent from '../HOC/AsyncComponent';\n\nconst AsyncHome = asyncComponent(() => import('../views/Home'));\nconst AsyncWorkList = asyncComponent(() => import('../views/WorkList'));\nconst AsyncBio = asyncComponent(() => import('../views/Bio'));\nconst AsyncContact = asyncComponent(() => import('../views/Contact'));\nconst AsyncWorkSimple = asyncComponent(() => import('../views/WorkSimple'));\nconst AsyncNotFound = asyncComponent(() => import('../views/404'));\n\nconst routes = [\n  {\n    path: routesDictionary.home,\n    component: AsyncHome,\n    title: 'Home',\n    exact: true,\n  },\n  {\n    path: routesDictionary.contact,\n    component: AsyncContact,\n    title: 'Contact',\n  },\n  {\n    path: routesDictionary.bio,\n    component: AsyncBio,\n    title: 'Bio',\n  },\n  {\n    path: routesDictionary.workSimple,\n    component: AsyncWorkSimple,\n    padding: false,\n    title: 'Work: ',\n  },\n  {\n    path: routesDictionary.work,\n    component: AsyncWorkList,\n    title: 'Work',\n  },\n  {\n    path: routesDictionary.notFound,\n    component: AsyncNotFound,\n    title: '404',\n  },\n  {\n    path: '*',\n    component: AsyncNotFound,\n    title: '404',\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport {\n  Route,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst routeTypes = {\n  public: ({ renderProps, component: Component }) => {\n    const { padding } = renderProps;\n\n    return (\n      <div className={padding ? 'px-4 pt-20' : undefined}>\n        <Component {...renderProps} />\n        {' '}\n      </div>\n    );\n  },\n};\n\nconst MakeRouteWithSubRoutes = (props) => {\n  const {\n    path, exact, title, padding,\n    component: Component, type,\n  } = props;\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={(renderProps) => {\n        const propsComponent = {\n          ...renderProps,\n          padding,\n        };\n        document.title = title;\n\n        return (\n          routeTypes[type]({\n            renderProps: propsComponent,\n            component: Component,\n          })\n        );\n      }}\n    />\n  );\n};\n\nMakeRouteWithSubRoutes.propTypes = {\n  /**\n   * The route path\n   */\n  path: PropTypes.string.isRequired,\n  /**\n   * Component to be rendered\n   */\n  component: PropTypes.elementType.isRequired,\n  /**\n   * If path will be an exact match\n   */\n  exact: PropTypes.bool,\n  /**\n   * Path type private, public, persistent\n   */\n  type: PropTypes.string,\n  /**\n   * Tab Title\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * If view have to has padding\n   */\n  padding: PropTypes.bool,\n};\n\nMakeRouteWithSubRoutes.defaultProps = {\n  exact: false,\n  type: 'public',\n  padding: true,\n};\n\nexport default MakeRouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport routes from './routesList';\nimport MakeRouteWithSubRoutes from './MakeRoutes';\n\nconst Routes = (props) => (\n  <Switch>\n    {\n      routes.map(\n        (route) => (\n          <MakeRouteWithSubRoutes\n            key={route.path}\n            {...props}\n            {...route}\n          />\n        ),\n      )\n    }\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { Col } from 'react-bootstrap';\n\nimport './styles.scss';\n\nconst FooterColumn = ({ title, children }) => (\n  <Col xs={4}>\n    <p className=\"footer-column-title\">{title}</p>\n    <div>\n      { children }\n    </div>\n  </Col>\n);\n\nexport default FooterColumn;\n","import React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport FooterColumn from './FooterColumn';\nimport LinkButton from '../LinkButton';\nimport routesDictionary from '../../routes/routesDict';\n\nimport './styles.scss';\n\nconst Footer = () => (\n  <Container className=\"footer-container\">\n    <Row>\n      <FooterColumn title=\"Hello!\">\n        <p>\n        Level 13, 2 Elizabeth St,\n        Melbourne, Victoria 3000\n        Australia\n        </p>\n        <p>\n          +61 (0) 7 9180 3458\n        </p>\n        <p>\n          noreply@envato.com\n        </p>\n      </FooterColumn>\n      <FooterColumn title=\"Clients\">\n        <p>\n          Dekoding\n        </p>\n        <p>\n          Fincite\n        </p>\n      </FooterColumn>\n      <FooterColumn title=\"Want to hire me?\">\n        <p>\n          Maecenas ut neque et ante convallis laoreet non ac eros.\n          Mauris a sem vel quam volutpat commodo sodales sit amet nisi. Donec eget urna.\n        </p>\n        <LinkButton text=\"Contact me\" route={routesDictionary.contact} />\n      </FooterColumn>\n    </Row>\n  </Container>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Row, Container, Col } from 'react-bootstrap';\nimport Sider from '../../components/Sider';\nimport Routes from '../../routes';\nimport Footer from '../../components/Footer';\n\nconst Layout = () => (\n  <Container fluid className=\"base-container\">\n    <Row noGutters className=\"base-container\">\n      <Col xs={0} xl={2}>\n        <Sider />\n      </Col>\n      <Col xs={12} xl={10} className=\"pb-10\">\n        <Routes />\n        <div className=\"px-4\">\n          <Footer />\n        </div>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport Layout from '../Layout';\n\nconst baseStates = {\n  loading: () => null,\n  component: (props) => (<Layout {...props} />),\n};\n\nclass Base extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      render: 'loading',\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      render: 'component',\n    });\n  }\n\n  render() {\n    const { render } = this.state;\n\n    return (baseStates[render]());\n  }\n}\n\nexport default Base;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport Base from './wrappers/Base';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/base.scss';\nimport './styles/overwrite.scss';\nimport './styles/utils.scss';\n\n\nconst App = () => (\n  <Router>\n    <Base />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const routesDictionary = {\n  contact: '/contact',\n  work: '/work',\n  workSimple: '/work/:id',\n  bio: '/bio',\n  home: '/',\n  notFound: '/404',\n};\n\nexport default routesDictionary;\n"],"sourceRoot":""}