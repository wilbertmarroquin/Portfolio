{"version":3,"sources":["components/Title/index.jsx","views/Contact/ContactForm/index.jsx","views/Contact/index.jsx"],"names":["Title","title","subtitle","noGutters","className","key","defaultProps","ContactForm","props","handleSubmit","bind","onChangeField","state","name","email","subject","message","loading","responseSuccessMessage","undefined","event","fieldName","tempField","target","value","this","setState","preventDefault","stopPropagation","emailjs","sendForm","process","then","catch","hasMessage","Container","Form","onSubmit","Row","Col","Control","required","type","placeholder","onChange","e","as","rows","Button","variant","disabled","role","Component","Contact","xs","md"],"mappings":"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","file":"static/js/6.24163a8a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'react-bootstrap';\n\nconst Title = ({ title, subtitle }) => ([\n  <Row noGutters className=\"mb-2\" key=\"title\">\n    <Col>\n      <h2>{ title }</h2>\n    </Col>\n  </Row>,\n  subtitle && (\n  <Row noGutters key=\"subtitle\">\n    <Col>\n      <h2>{ subtitle }</h2>\n    </Col>\n  </Row>\n  ),\n]);\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n};\n\nTitle.defaultProps = {\n  subtitle: null,\n};\n\nexport default Title;\n","import React, { Component } from 'react';\nimport {\n  Container, Form, Row, Col, Button,\n} from 'react-bootstrap';\nimport emailjs from 'emailjs-com';\nimport './styles.scss';\n\nconst successMessage = 'Message sended successfully, I will contact you soon';\nconst errorMessage = 'Something was wrong, please contact me directly to \"wilbertmarroquin1996@gmail.com\"';\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onChangeField = this.onChangeField.bind(this);\n\n    this.state = {\n      name: '',\n      email: '',\n      subject: '',\n      message: '',\n      loading: false,\n      responseSuccessMessage: undefined,\n    };\n  }\n\n  onChangeField(event, fieldName) {\n    const tempField = {};\n    tempField[fieldName] = event.target.value;\n    this.setState(tempField);\n  }\n\n  handleSubmit(event) {\n    const { loading } = this.state;\n    if (!loading) {\n      this.setState({ loading: true });\n      event.preventDefault();\n      event.stopPropagation();\n      emailjs.sendForm(\n        process.env.REACT_APP_EMAIL_KEY, process.env.REACT_APP_EMAIL_TEMPLATE,\n        event.target, process.env.REACT_APP_EMAIL_USER,\n      ).then(() => {\n        this.setState({\n          loading: false,\n          responseSuccessMessage: true,\n          name: '',\n          email: '',\n          subject: '',\n          message: '',\n        });\n      }).catch(() => {\n        this.setState({ loading: false, responseSuccessMessage: false });\n      });\n    }\n  }\n\n  render() {\n    const yourEmailText = 'Your e-mail';\n    const yourNameText = 'Your name';\n    const subjectText = 'Subject';\n    const messageText = 'Message';\n    const sendMessageText = 'Send Message';\n    const {\n      loading, responseSuccessMessage, name, email, subject, message,\n    } = this.state;\n    const hasMessage = typeof responseSuccessMessage !== 'undefined';\n\n    return (\n      <Container className=\"contact-form\">\n        <Form onSubmit={this.handleSubmit}>\n          <Row>\n            <Col>\n              <Form.Control\n                required\n                type=\"text\"\n                value={name}\n                name=\"from_name\"\n                placeholder={yourNameText}\n                onChange={(e) => { this.onChangeField(e, 'name'); }}\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                required\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder={yourEmailText}\n                onChange={(e) => { this.onChangeField(e, 'email'); }}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mt-2\">\n            <Col>\n              <Form.Control\n                required\n                type=\"text\"\n                value={subject}\n                placeholder={subjectText}\n                name=\"subject\"\n                onChange={(e) => { this.onChangeField(e, 'subject'); }}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mt-2\">\n            <Col>\n              <Form.Control\n                required\n                as=\"textarea\"\n                rows=\"5\"\n                name=\"message\"\n                placeholder={messageText}\n                value={message}\n                onChange={(e) => { this.onChangeField(e, 'message'); }}\n              />\n            </Col>\n          </Row>\n          <Row className=\"mt-2\">\n            <Col>\n              <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n                {loading\n                && (\n                  <div className=\"spinner-border spinner-border-sm mr-1\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                )}\n                {sendMessageText}\n              </Button>\n            </Col>\n            {!loading && hasMessage\n            && (\n            <Col className={responseSuccessMessage ? 'success-message' : 'error-message'}>\n              {responseSuccessMessage ? successMessage : errorMessage}\n            </Col>\n            )}\n          </Row>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Title from '../../components/Title';\nimport ContactForm from './ContactForm';\n\nconst Contact = () => {\n  const contactMeText = 'Contact me';\n  const sayHelloText = 'Say hello!';\n\n  return (\n    <Container>\n      <Title title={contactMeText} />\n      <Row className=\"mt-10\">\n        <Col xs={24} md={3}>\n          <h2>{sayHelloText}</h2>\n        </Col>\n        <Col xs={24} md={9}>\n          <ContactForm />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Contact;\n"],"sourceRoot":""}